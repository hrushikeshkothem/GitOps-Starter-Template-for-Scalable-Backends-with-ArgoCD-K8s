alloy:
  extraPorts:
    - name: "grpc"
      port: 4317
      targetPort: 4317
      protocol: "TCP"
  configMap:
    content: |-
      loki.write "default" {
        endpoint {
          url = "http://loki.monitoring:3100/loki/api/v1/push"
        }
      }
      discovery.kubernetes "pod" {
        role = "pod"
      }
      discovery.relabel "pod_logs" {
        targets = discovery.kubernetes.pod.targets
        rule {
          source_labels = ["__meta_kubernetes_namespace"]
          action          = "replace"
          target_label    = "namespace"
        }
        rule {
          source_labels = ["__meta_kubernetes_pod_name"]
          action          = "replace"
          target_label    = "pod"
        }
        rule {
          source_labels = ["__meta_kubernetes_pod_container_name"]
          action          = "replace"
          target_label    = "container"
        }
        rule {
          source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
          action          = "replace"
          target_label    = "app"
        }
        rule {
          source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
          action          = "replace"
          target_label    = "job"
          separator       = "/"
          replacement     = "$1/$2"
        }
        rule {
          source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
          action          = "replace"
          target_label    = "__path__"
          separator       = "/"
          replacement     = "/var/log/pods/*$1/*.log"
        }
        rule {
          source_labels = ["__meta_kubernetes_pod_container_id"]
          action          = "replace"
          target_label    = "container_runtime"
          regex           = "^(\\S+):\\/\\/.+$"
          replacement     = "$1"
        }
      }
      loki.source.kubernetes "pod_logs" {
        targets     = discovery.relabel.pod_logs.output
        forward_to = [loki.process.pod_logs.receiver]
      }
      loki.process "pod_logs" {
        stage.static_labels {
          values = {
            cluster = "kubernetes",
          }
        }
        forward_to = [loki.write.default.receiver]
      }
      otelcol.exporter.otlp "tempoExporter" {
        client {
          endpoint = "tempo.monitoring.svc.cluster.local:4317"
          tls {
            insecure = true
          }
        }
      }
      otelcol.connector.servicegraph "default" {
        dimensions = ["http.method", "http.target"]
        output {
          metrics = [otelcol.exporter.otlp.tempoExporter.input]
        }
      }
      otelcol.receiver.otlp "defaultReceiver" {
        grpc {
          endpoint = ":4317"
        }
        output {
          traces = [
            otelcol.exporter.otlp.tempoExporter.input,
            otelcol.connector.servicegraph.default.input,
          ]
        }
      }
